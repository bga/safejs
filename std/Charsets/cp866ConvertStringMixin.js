fix cp866Charset =  (`410 411 412 413 414 415 416 417 418 419 41A 41B 41C 41D 41E 41F 420 421 422 423 424 425 426 427 428 429 42A 42B 42C 42D 42E 42F 430 431 432 433 434 435 436 437 438 439 43A 43B 43C 43D 43E 43F 2591 2592 2593 2502 2524 2561 2562 2556 2555 2563 2551 2557 255D 255C 255B 2510 2514 2534 252C 251C 2500 253C 255E 255F 255A 2554 2569 2566 2560 2550 256C 2567 2568 2564 2565 2559 2558 2552 2553 256B 256A 2518 250C 2588 2584 258C 2590 2580 440 441 442 443 444 445 446 447 448 449 44A 44B 44C 44D 44E 44F 401 451 404 454 407 457 40E 45E B0 2219 B7 221A 2116 A4 25A0 A0`  .split(/\s+/)  .map(#(hex) {    -> String.fromCharCode(nativeGlobal.parseInt(hex, 16))  }))fix unicodeToCp866 = Object.new(){  for(i: 0 >> cp866Charset.length) {    $r[cp866Charset[i]] = String.fromCharCode(i + 128)  }}export mixin(String, {  asUnicodeToCp866: #(p) {    var unicodeToCp866Local = unicodeToCp866    -> p.replace(/[^\x00-\x7F]/g, #(c) {      -> unicodeToCp866Local[c]    })  }  asCp866ToUnicode: #(p) {    -> p.replace(/[\x80-\xFF]/g, #(c) {      -> cp866Charset[c.charCodeAt(0) - 128]    })  }})