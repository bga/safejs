fix quoteString = #(s) {  -> s.replace(/\\/g, `\\`).replace(/\n/g, `\n`).replace(/\"/g, `\"`)}export #(s) {  -> ((`}` + s + `${`)    .replace(/\}([\s\S]*?)\$\{/g, #(all, s) {      -> `}"` + quoteString(s) + `"${`    })    .replace(/\$\{(.*?)\}/g, #(all, expr) {      # double bracket == escape      -> ` + (` + expr + `) + `      if(expr.match(/^\$\{/)) {        -> all      }      else {      }    })  ).slice(1, -2)  }spec {  fix a = 1  assert(self(`${ a } $`) == `1 $`)  assert(self(`${ a }`) == `1`)  assert(self(`0${ a }2`) == `012`)}